package macaw.persistenceLayer.demo;

import java.util.ArrayList;
import java.util.Iterator;
import macaw.MacawMessages;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.User;
import macaw.system.MacawErrorType;
import macaw.system.MacawException;
import macaw.util.SearchUtility;
import macaw.util.ValidationUtility;

public class InMemoryOntologyTermFilter {
    private ArrayList<OntologyTerm> ontologyTerms = new ArrayList();

    public InMemoryOntologyTermFilter() {
    }

    public void setOntologyTerms(ArrayList<OntologyTerm> var1) {
        this.ontologyTerms = var1;
    }

    public ArrayList<OntologyTerm> filterOntologyTerms(User var1, String var2, String var3) throws MacawException {
        if (ValidationUtility.isEmptyValue(var2) && ValidationUtility.isEmptyValue(var3)) {
            String var14 = MacawMessages.getMessage("ontologyTermFilter.error");
            MacawException var15 = new MacawException(MacawErrorType.NO_ONTOLOGY_TERM_FILTER, var14);
            throw var15;
        } else {
            ArrayList var4 = this.filterByTerm(var2, this.ontologyTerms);
            ArrayList var5 = this.filterByDescription(var3, var4);
            ArrayList var6 = new ArrayList();
            Iterator var7 = var5.iterator();

            while(var7.hasNext()) {
                OntologyTerm var8 = (OntologyTerm)var7.next();
                String var9 = var8.getDisplayName();
                int var10 = -1;
                int var11 = var6.size();

                for(int var12 = 0; var12 < var11; ++var12) {
                    String var13 = ((OntologyTerm)var6.get(var12)).getDisplayName();
                    if (var9.compareTo(var13) > 0) {
                        var10 = var12;
                        break;
                    }
                }

                OntologyTerm var16 = (OntologyTerm)var8.clone();
                if (var10 == -1) {
                    var6.add(var16);
                } else {
                    var6.add(var10, var16);
                }
            }

            return var6;
        }
    }
}

public class OntologyTerm implements Serializable, Displayable, Cloneable {
    private int identifier = 0;
    private String term = "";
    private String ontologyName = "LHA";
    private String description = "";
    private double versionNumber = 1.0;
    private String nameSpace = "lha.mrc.ac.uk:LHA";
    private boolean isNewRecord = true;

    public OntologyTerm() {
    }

    public int getIdentifier() {
        return this.identifier;
    }

    public void setIdentifier(int var1) {
        this.identifier = var1;
    }

    public void setNewRecord(boolean var1) {
        this.isNewRecord = var1;
    }

    public void setNewRecord() {
        this.isNewRecord = true;
    }

    public String getTerm() {
        return this.term;
    }

    public void setTerm(String var1) {
        this.term = var1;
    }

}
