import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;

public class TestSuite {
    private InMemoryVariableManager variableManager;
    private User user;

    @Before
    public void setUp() {
        // Initialize the necessary objects for the test cases
        InMemoryChangeEventManager eventManager = new InMemoryChangeEventManager();
        InMemoryListChoiceManager listChoiceManager = new InMemoryListChoiceManager(eventManager);
        InMemoryOntologyTermManager ontologyTermManager = new InMemoryOntologyTermManager(eventManager);
        InMemorySupportingDocumentsManager supportingDocumentsManager = new InMemorySupportingDocumentsManager(eventManager);
        variableManager = new InMemoryVariableManager(eventManager, listChoiceManager, ontologyTermManager, supportingDocumentsManager);
        user = new User();
    }

    @Test
    public void testEmptyVariableName() {
        assertNull(variableManager.getVariable(user, ""));
    }

    @Test
    public void testValidVariableName() {
        Variable variable = new Variable("validVariable");
        List<Variable> variables = variableManager.getVariables(user);
        variables.add(variable);
        //variableManager.addVariable(user, variable);
        Variable retrievedVariable = variableManager.getVariable(user, "validVariable");
        assertNotNull(retrievedVariable);
        assertEquals("validVariable", retrievedVariable.getName());
        assertNotSame(variable, retrievedVariable);
    }

    @Test
    public void testNonMatchingVariableName() {
        Variable variable = new Variable("nonMatchingVariable");
        variableManager.addVariable(user, variable);
        variableManager.getVariable(user, "invalidVariable");
        assertNull(variableManager.getVariable(user, "invalidVariable"));
    }

    @After
    public void tearDown() {
        variableManager = null;
        user = null;
    }
}
